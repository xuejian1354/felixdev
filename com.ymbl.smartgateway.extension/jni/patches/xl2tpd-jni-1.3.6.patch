--- xl2tpd/Makefile
+++ xl2tpd/Makefile
@@ -62,7 +62,7 @@ OSFLAGS?= -DLINUX -I$(KERNELSRC)/include/
 # are packages seperately (eg kernel-headers on Fedora)
 # Note: 2.6.23+ support still needs some changes in the xl2tpd source
 #
-OSFLAGS+= -DUSE_KERNEL
+#OSFLAGS+= -DUSE_KERNEL
 #
 #
 # Uncomment the next line for FreeBSD
@@ -93,12 +93,13 @@ IPFLAGS?= -DIP_ALLOCATION
 
 CFLAGS+= $(DFLAGS) -O2 -fno-builtin -Wall -DSANITY $(OSFLAGS) $(IPFLAGS)
 HDRS=l2tp.h avp.h misc.h control.h call.h scheduler.h file.h aaa.h md5.h
-OBJS=xl2tpd.o pty.o misc.o control.o avp.o call.o network.o avpsend.o scheduler.o file.o aaa.o md5.o
+OBJS=xl2tpd.o pty.o misc.o control.o avp.o call.o network.o avpsend.o scheduler.o file.o aaa.o md5.o com_ymbl_smartgateway_extension_XL2tpd.o
 SRCS=${OBJS:.o=.c} ${HDRS}
 CONTROL_SRCS=xl2tpd-control.c
 #LIBS= $(OSLIBS) # -lefence # efence for malloc checking
 EXEC=xl2tpd
 CONTROL_EXEC=xl2tpd-control
+TARLIB=XL2tpd.so
 
 PREFIX?=/usr/local
 SBINDIR?=$(DESTDIR)${PREFIX}/sbin
@@ -106,7 +107,7 @@ BINDIR?=$(DESTDIR)${PREFIX}/bin
 MANDIR?=$(DESTDIR)${PREFIX}/share/man
 
 
-all: $(EXEC) pfc $(CONTROL_EXEC)
+all: $(EXEC) pfc $(CONTROL_EXEC) $(TARLIB)
 
 clean:
 	rm -f $(OBJS) $(EXEC) pfc.o pfc $(CONTROL_EXEC)
@@ -117,9 +118,12 @@ $(EXEC): $(OBJS) $(HDRS)
 $(CONTROL_EXEC): $(CONTROL_SRCS)
 	$(CC) $(CFLAGS) $(LDFLAGS) $(CONTROL_SRCS) -o $@
 
+$(TARLIB): $(EXEC)
+	$(CC) -fPIC -DPIC -shared -nostdlib $(LDFLAGS) -o $@ $(OBJS) $(LDLIBS)
+
 pfc:
 	$(CC) $(CFLAGS) -c contrib/pfc.c
-	$(CC) $(LDFLAGS) -o pfc pfc.o -lpcap $(LDLIBS)
+	$(CC) $(LDFLAGS) -o pfc pfc.o -static -lpcap $(LDLIBS)
 
 romfs:
 	$(ROMFSINST) /bin/$(EXEC)
--- xl2tpd/l2tp.h
+++ xl2tpd/l2tp.h
@@ -37,14 +37,14 @@ typedef unsigned long long _u64;
 #include "common.h"
 #include "ipsecmast.h"
 
-#define CONTROL_PIPE "/var/run/xl2tpd/l2tp-control"
+#define CONTROL_PIPE "/tmp/transite-target/var/run/l2tp-control"
 #define CONTROL_PIPE_MESSAGE_SIZE 1024
 
 #define BINARY "xl2tpd"
 #define SERVER_VERSION "xl2tpd-1.3.6"
 #define VENDOR_NAME "xelerance.com"
 #ifndef PPPD
-#define PPPD		"/usr/sbin/pppd"
+#define PPPD		"/tmp/transite-target/bin/pppd"
 #endif
 #define CALL_PPP_OPTS "defaultroute"
 #define FIRMWARE_REV	0x0690  /* Revision of our firmware (software, in this case) */
--- xl2tpd/aaa.c
+++ xl2tpd/aaa.c
@@ -112,6 +112,9 @@ unsigned int get_addr (struct iprange *ipr)
             {
                 /* Found an IP in an ALLOW range, check to be sure it is
                    consistant through the remaining regions */
+                if(gconfig.randip)
+                    x = (rand() % (ntohl (ipr->end) - ntohl (ipr->start) + 1))
+                            + ntohl (ipr->start);
                 if (!ip_used (x))
                 {
                     status = SENSE_ALLOW;
--- xl2tpd/file.c
+++ xl2tpd/file.c
@@ -52,6 +52,27 @@ int init_config ()
     laclist = NULL;
     deflac = (struct lac *) calloc (1, sizeof (struct lac));
 
+	if(gconfig.connect_lns)
+	{
+        struct lac *tc = new_lac ();
+        if (!tc)
+            return -1;
+        tc->next = laclist;
+        laclist = tc;
+
+		parse_one_option("lns", gconfig.connect_host,
+			CONTEXT_LAC|CONTEXT_DEFAULT, tc);
+		parse_one_option("autodial", "yes",
+			CONTEXT_LAC|CONTEXT_DEFAULT, tc);
+		parse_one_option("length bit", "yes",
+			CONTEXT_LAC|CONTEXT_DEFAULT, tc);
+		parse_one_option("ppp debug", "yes",
+			CONTEXT_LAC|CONTEXT_DEFAULT, tc);
+		parse_one_option("pppoptfile", gconfig.connect_pppdconf,
+			CONTEXT_LAC|CONTEXT_DEFAULT, tc);
+		return 0;
+	}
+
     f = fopen (gconfig.configfile, "r");
     if (!f) 
     {
--- xl2tpd/file.h
+++ xl2tpd/file.h
@@ -162,6 +162,10 @@ struct global
     int sarefnum;		/* Value of IPSEC_REFINFO used by kernel
 				 * (we used to pick 22, but 2.6.36+ took that, so now we pick 30)
 				 * Changed in SAref patch in openswan 2.6.36 for linux 2.6.36+ */
+    int randip; 		/* Use ip random */
+    int connect_lns;	/* Connect lns directly by args */
+    char connect_host[STRLEN]; 	/* Connect host address */
+    char connect_pppdconf[STRLEN]; 	/* Connect pppd connect file */
 };
 
 extern struct global gconfig;   /* Global configuration options */
--- xl2tpd/xl2tpd.c
+++ xl2tpd/xl2tpd.c
@@ -1312,7 +1312,8 @@ void do_control ()
 void usage(void) {
     printf("\nxl2tpd version:  %s\n", SERVER_VERSION);
     printf("Usage: xl2tpd [-c <config file>] [-s <secret file>] [-p <pid file>]\n"
-           "              [-C <control file>] [-D]\n"
+           "              [-C <control file>] [-D] [--randip]\n"
+           "              [--clns <lns address> <pppd conf file>]\n"
            "              [-v, --version]\n");
     printf("\n");
     exit(1);
@@ -1329,6 +1330,8 @@ void init_args(int argc, char *argv[])
     memset(gconfig.configfile,0,STRLEN);
     memset(gconfig.pidfile,0,STRLEN);
     memset(gconfig.controlfile,0,STRLEN);
+    memset(gconfig.connect_host,0,STRLEN);
+    memset(gconfig.connect_pppdconf,0,STRLEN);
     strncpy(gconfig.altauthfile,ALT_DEFAULT_AUTH_FILE,
             sizeof(gconfig.altauthfile) - 1);
     strncpy(gconfig.altconfigfile,ALT_DEFAULT_CONFIG_FILE,
@@ -1342,6 +1345,8 @@ void init_args(int argc, char *argv[])
     strncpy(gconfig.controlfile,CONTROL_PIPE,
             sizeof(gconfig.controlfile) - 1);
     gconfig.ipsecsaref = 0;
+	gconfig.randip = 0;
+	gconfig.connect_lns = 0;
 
     for (i = 1; i < argc; i++) {
         if ((! strncmp(argv[i],"--version",9))
@@ -1360,6 +1365,9 @@ void init_args(int argc, char *argv[])
         else if (! strncmp(argv[i],"-D",2)) {
             gconfig.daemon=0;
         }
+        else if (! strncmp(argv[i],"--randip",8)) {
+            gconfig.randip=1;
+        }
         else if (! strncmp(argv[i],"-s",2)) {
             if(++i == argc)
                 usage();
@@ -1381,6 +1389,21 @@ void init_args(int argc, char *argv[])
                 strncpy(gconfig.controlfile,argv[i],
                         sizeof(gconfig.controlfile) - 1);
         }
+        else if (! strncmp(argv[i],"--clns",6)) {
+            if(++i >= argc-1)
+            {
+                usage();
+				i++;
+            }
+            else
+            {
+                gconfig.connect_lns = 1;
+                strncpy(gconfig.connect_host,argv[i++],
+                        sizeof(gconfig.connect_host) - 1);
+                strncpy(gconfig.connect_pppdconf,argv[i],
+                        sizeof(gconfig.connect_pppdconf) - 1);
+            }
+        }
         else {
             usage();
         }
